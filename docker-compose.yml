version: '3.2'

services:
  mediabox-deluge:
    image: binhex/arch-delugevpn
    container_name: mediabox-deluge
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - PHP_TZ=${TIME_ZONE}
      - UMASK=022
      - NAME_SERVERS=${DELUGE_DNS}
      - LAN_NETWORK=192.168.1.0/24
      - ENABLE_PRIVOXY=no
      - STRICT_PORT_FORWARD=${DELUGE_VPN_STRICT_PORT_FORWARD}
      - VPN_PROV=${DELUGE_VPN_PROV}
      - VPN_USER=${DELUGE_VPN_USER}
      - VPN_PASS=${DELUGE_VPN_PASS}
      - VPN_ENABLED=${DELUGE_VPN_ENABLED}
      - DELUGE_DAEMON_LOG_LEVEL=warning
      - DELUGE_WEB_LOG_LEVEL=warning
      - DEBUG=false
    volumes:
      - ${CONFIG_PATH}/deluge:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${MOUNT_PATH}:/mnt:rw,rslave
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    networks:
      - torrent

  mediabox-deluge-proxy:
    image: nginx:latest
    depends_on:
      - mediabox-deluge
    container_name: mediabox-deluge-proxy
    volumes:
      - ${CONFIG_PATH}/deluge-proxy:/etc/nginx/
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-deluge.service=mediabox-deluge"
      - "traefik.http.routers.mediabox-deluge.rule=Host(\"deluge.$DOMAIN\")"
      - "traefik.http.routers.mediabox-deluge.tls=true"
      - "traefik.http.routers.mediabox-deluge.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-deluge.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-deluge.loadbalancer.server.port=80"
    networks:
      - torrent
      - web_proxy

  mediabox-deluge-exporter:
    image: tobbez/deluge_exporter:latest
    user: "${PUID}:${PGID}"
    depends_on:
      - mediabox-deluge
    container_name: mediabox-deluge-exporter
    environment: 
      - DELUGE_HOST=mediabox-deluge
    volumes:
      - ${CONFIG_PATH}/deluge:/.config/deluge/
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-deluge-exporter.service=mediabox-deluge-exporter"
      - "traefik.http.routers.mediabox-deluge-exporter.rule=Host(\"deluge.$DOMAIN\") && Path(\"/metrics\")"
      - "traefik.http.routers.mediabox-deluge-exporter.tls=true"
      - "traefik.http.routers.mediabox-deluge-exporter.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-deluge-exporter.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.routers.mediabox-deluge-exporter.middlewares=mediabox-deluge-exporter-auth"
      - "traefik.http.services.mediabox-deluge-exporter.loadbalancer.server.port=9354"
      - "traefik.http.middlewares.mediabox-deluge-exporter-auth.basicauth.users=$DELUGE_EXPORTER_USER_PASSWORD"
    networks:
      - torrent
      - web_proxy
  
  mediabox-sonarr:
    image: linuxserver/sonarr
    container_name: mediabox-sonarr
    depends_on:
      - mediabox-deluge
      - mediabox-jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${MOUNT_PATH}:/mnt:rw,rslave
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-sonarr.service=mediabox-sonarr"
      - "traefik.http.routers.mediabox-sonarr.rule=Host(\"sonarr.$DOMAIN\")"
      - "traefik.http.routers.mediabox-sonarr.tls=true"
      - "traefik.http.routers.mediabox-sonarr.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-sonarr.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-sonarr.loadbalancer.server.port=8989"
    networks:
      - torrent
      - web_proxy
  
  mediabox-radarr:
    image: linuxserver/radarr
    container_name: mediabox-radarr
    depends_on:
      - mediabox-deluge
      - mediabox-jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${MOUNT_PATH}:/mnt:rw,rslave
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-radarr.service=mediabox-radarr"
      - "traefik.http.routers.mediabox-radarr.rule=Host(\"radarr.$DOMAIN\")"
      - "traefik.http.routers.mediabox-radarr.tls=true"
      - "traefik.http.routers.mediabox-radarr.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-radarr.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-radarr.loadbalancer.server.port=7878"
    networks:
      - torrent
      - web_proxy
  
  mediabox-lidarr:
    image: linuxserver/lidarr
    container_name: mediabox-lidarr
    depends_on:
      - mediabox-deluge
      - mediabox-jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/lidarr:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${MOUNT_PATH}:/mnt:rw,rslave
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-lidarr.service=mediabox-lidarr"
      - "traefik.http.routers.mediabox-lidarr.rule=Host(\"lidarr.$DOMAIN\")"
      - "traefik.http.routers.mediabox-lidarr.tls=true"
      - "traefik.http.routers.mediabox-lidarr.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-lidarr.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-lidarr.loadbalancer.server.port=8686"
    networks:
      - torrent
      - web_proxy

  mediabox-bazarr:
    image: linuxserver/bazarr
    container_name: mediabox-bazarr
    depends_on:
      - mediabox-sonarr
      - mediabox-radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/bazarr:/config
      - ${MOUNT_PATH}:/mnt:rw,rslave
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-bazarr.service=mediabox-bazarr"
      - "traefik.http.routers.mediabox-bazarr.rule=Host(\"bazarr.$DOMAIN\")"
      - "traefik.http.routers.mediabox-bazarr.tls=true"
      - "traefik.http.routers.mediabox-bazarr.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-bazarr.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-bazarr.loadbalancer.server.port=6767"
    networks:
      - torrent
      - web_proxy

  mediabox-jackett:
    image: linuxserver/jackett
    container_name: mediabox-jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/jackett:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-jackett.service=mediabox-jackett"
      - "traefik.http.routers.mediabox-jackett.rule=Host(\"jackett.$DOMAIN\")"
      - "traefik.http.routers.mediabox-jackett.tls=true"
      - "traefik.http.routers.mediabox-jackett.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-jackett.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-jackett.loadbalancer.server.port=9117"
    networks:
      - web_proxy

  mediabox-pyload:
    image: linuxserver/pyload
    container_name: mediabox-pyload
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/pyload:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${MOUNT_PATH}:/mnt:rw,rslave
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-pyload.service=mediabox-pyload"
      - "traefik.http.routers.mediabox-pyload.rule=Host(\"pyload.$DOMAIN\")"
      - "traefik.http.routers.mediabox-pyload.tls=true"
      - "traefik.http.routers.mediabox-pyload.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-pyload.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-pyload.loadbalancer.server.port=8000"
    networks:
      - web_proxy

  mediabox-jellyfin:
    image: linuxserver/jellyfin
    container_name: mediabox-jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/jellyfin:/config
      - ${MOUNT_PATH}:/mnt:rw,rslave
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-jellyfin.service=mediabox-jellyfin"
      - "traefik.http.routers.mediabox-jellyfin.rule=Host(\"jellyfin.$DOMAIN\")"
      - "traefik.http.routers.mediabox-jellyfin.tls=true"
      - "traefik.http.routers.mediabox-jellyfin.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-jellyfin.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-jellyfin.loadbalancer.server.port=8096"
    networks:
      - web_proxy

  mediabox-embystat:
    image: linuxserver/embystat
    container_name: mediabox-embystat
    depends_on:
      - mediabox-jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/embystat:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-embystat.service=mediabox-embystat"
      - "traefik.http.routers.mediabox-embystat.rule=Host(\"embystat.$DOMAIN\")"
      - "traefik.http.routers.mediabox-embystat.tls=true"
      - "traefik.http.routers.mediabox-embystat.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-embystat.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-embystat.loadbalancer.server.port=6555"
    networks:
      - web_proxy

  mediabox-ombi:
    image: linuxserver/ombi
    container_name: mediabox-ombi
    depends_on:
      - mediabox-jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIG_PATH}/ombi:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediabox-ombi.service=mediabox-ombi"
      - "traefik.http.routers.mediabox-ombi.rule=Host(\"ombi.$DOMAIN\")"
      - "traefik.http.routers.mediabox-ombi.tls=true"
      - "traefik.http.routers.mediabox-ombi.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.routers.mediabox-ombi.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.services.mediabox-ombi.loadbalancer.server.port=3579"
    networks:
      - web_proxy

networks:
  torrent:
    driver: bridge
  web_proxy:
    external:
      name: ${WEB_PROXY_NETWORK}